{"ast":null,"code":"var _jsxFileName = \"/Users/khai/Library/Mobile Documents/com~apple~CloudDocs/Desktop/WORKSPACE/REACT-BIG/React-evon/my-app/src/component/news/HackerNews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\"; //https://hn.algolia.com/api/v1/search?query=react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HackerNews = () => {\n  _s();\n\n  const [hits, setHits] = useState([]);\n  const [query, setQuery] = useState(\"react\");\n  const handleFetchData = useRef({});\n\n  handleFetchData.current = async () => {\n    var _response$data;\n\n    const response = await axios.get(`https://hn.algolia.com/api/v1/search?query=${query}`);\n    console.table(response.data.hits);\n    setHits(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.hits) || []);\n  }; // useRef(() => {\n  //   handleFetchData.current();\n  // });\n\n\n  useEffect(() => {\n    handleFetchData.current();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"border border-green-500 text-black p-5\",\n      onChange: e => {\n        setQuery(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), hits.length > 0 && hits.map((item, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", item.title]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HackerNews, \"rSEjpItunHXbb9APOTW306KHT9o=\");\n\n_c = HackerNews;\nexport default HackerNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"HackerNews\");","map":{"version":3,"sources":["/Users/khai/Library/Mobile Documents/com~apple~CloudDocs/Desktop/WORKSPACE/REACT-BIG/React-evon/my-app/src/component/news/HackerNews.js"],"names":["React","useEffect","useRef","useState","axios","HackerNews","hits","setHits","query","setQuery","handleFetchData","current","response","get","console","table","data","e","target","value","length","map","item","index","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAMO,eAAe,GAAGR,MAAM,CAAC,EAAD,CAA9B;;AAEAQ,EAAAA,eAAe,CAACC,OAAhB,GAA0B,YAAY;AAAA;;AACpC,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACpB,8CAA6CL,KAAM,EAD/B,CAAvB;AAGAM,IAAAA,OAAO,CAACC,KAAR,CAAcH,QAAQ,CAACI,IAAT,CAAcV,IAA5B;AACAC,IAAAA,OAAO,CAAC,mBAAAK,QAAQ,CAACI,IAAT,kEAAeV,IAAf,KAAuB,EAAxB,CAAP;AACD,GAND,CALuB,CAavB;AACA;AACA;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,eAAe,CAACC,OAAhB;AACD,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,wCAFZ;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAO;AACfR,QAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YADF,EAQGb,IAAI,CAACc,MAAL,GAAc,CAAd,IACCd,IAAI,CAACe,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,sBAAkBD,IAAI,CAACE,KAAvB;AAAA,OAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YAA1B,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMlB,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n//https://hn.algolia.com/api/v1/search?query=react\nconst HackerNews = () => {\n  const [hits, setHits] = useState([]);\n  const [query, setQuery] = useState(\"react\");\n  const handleFetchData = useRef({});\n\n  handleFetchData.current = async () => {\n    const response = await axios.get(\n      `https://hn.algolia.com/api/v1/search?query=${query}`\n    );\n    console.table(response.data.hits);\n    setHits(response.data?.hits || []);\n  };\n\n  // useRef(() => {\n  //   handleFetchData.current();\n  // });\n  useEffect(() => {\n    handleFetchData.current();\n  }, [query]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        className=\"border border-green-500 text-black p-5\"\n        onChange={(e) => {\n          setQuery(e.target.value);\n        }}\n      />\n      {hits.length > 0 &&\n        hits.map((item, index) => <h3 key={index}> {item.title}</h3>)}\n    </div>\n  );\n};\n\nexport default HackerNews;\n"]},"metadata":{},"sourceType":"module"}