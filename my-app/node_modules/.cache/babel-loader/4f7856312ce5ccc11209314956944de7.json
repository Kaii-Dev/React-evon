{"ast":null,"code":"var _jsxFileName = \"/Users/khai/Desktop/code/React-evon/my-app/src/component/state/toogle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./toogleStyle.css\"; //_STATELESS FUNCTIONAL COMPONENT_ : là component nhưng không sử dụng state\n//_STATEful FUNCTIONAL COMPONENT_ : là component nhưng có sử dụng state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Toogle() {\n  _s();\n\n  // 1. enabling state : useState(initial value)\n  // 2. initialize state : useState(false)\n  // 3. reading state :\n  // 4. updating state\n  const [on, setOn] = useState(false); //initial value is false, so it will be false when the component is rendered\n\n  console.log(on, setOn);\n\n  const handleToogle = () => {\n    setOn(previousState => {\n      !previousState;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toogle ${on ? \"active\" : \"\"}`,\n      onClick: handleToogle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `spinner ${on ? \"active\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toogle, \"aIJ9khZVxs/SudlWq6DySilygF4=\");\n\n_c = Toogle;\nexport default Toogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toogle\");","map":{"version":3,"sources":["/Users/khai/Desktop/code/React-evon/my-app/src/component/state/toogle.js"],"names":["React","useState","Toogle","on","setOn","console","log","handleToogle","previousState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP,C,CACA;AACA;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA;AACA;AACA;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcH,QAAQ,CAAC,KAAD,CAA5B,CALgB,CAKqB;;AACrCI,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBC,KAAhB;;AACA,QAAMG,YAAY,GAAG,MAAM;AACzBH,IAAAA,KAAK,CAAEI,aAAD,IAAiB;AACrB,OAACA,aAAD;AACD,KAFI,CAAL;AAGD,GAJD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,UAASL,EAAE,GAAG,QAAH,GAAc,EAAG,EAA7C;AAAgD,MAAA,OAAO,EAAEI,YAAzD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,WAAUJ,EAAE,GAAG,QAAH,GAAc,EAAG;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3BQD,M;;KAAAA,M;AA6BT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toogleStyle.css\";\n//_STATELESS FUNCTIONAL COMPONENT_ : là component nhưng không sử dụng state\n//_STATEful FUNCTIONAL COMPONENT_ : là component nhưng có sử dụng state\n\nfunction Toogle() {\n  // 1. enabling state : useState(initial value)\n  // 2. initialize state : useState(false)\n  // 3. reading state :\n  // 4. updating state\n  const [on, setOn] = useState(false); //initial value is false, so it will be false when the component is rendered\n  console.log(on, setOn);\n  const handleToogle = () => {\n    setOn((previousState)=>{\n      !previousState\n    });\n  };\n  return (\n    <div className=\"\">\n      <div className={`toogle ${on ? \"active\" : \"\"}`} onClick={handleToogle}>\n        <div className={`spinner ${on ? \"active\" : \"\"}`}></div>\n      </div>\n      {/* <div className=\"toogle-control\">\n        <div className=\"toogle-on\" onClick={() => setOn(true)}>\n          On\n        </div>\n        <div className=\"toogle-off\" onClick={() => setOn(false)}>\n          Off\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Toogle;\n"]},"metadata":{},"sourceType":"module"}