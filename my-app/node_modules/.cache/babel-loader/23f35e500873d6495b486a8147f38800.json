{"ast":null,"code":"var _jsxFileName = \"/Users/khai/Library/Mobile Documents/com~apple~CloudDocs/Desktop/WORKSPACE/REACT-BIG/React-evon/my-app/src/context/countContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountContext = /*#__PURE__*/createContext();\n\nfunction CountProvider(props) {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const value = [count, setCount];\n  return /*#__PURE__*/_jsxDEV(CountContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} //custom hook useCount\n\n\n_s(CountProvider, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = CountProvider;\n\nfunction useCount() {\n  _s2();\n\n  const context = useContext(CountContext);\n  if (typeof context === \"undefined\") throw new Error(\"useCount must be used within a CountProvider\");\n  return context;\n}\n\n_s2(useCount, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { CountContext, useCount };\n\nvar _c;\n\n$RefreshReg$(_c, \"CountProvider\");","map":{"version":3,"sources":["/Users/khai/Library/Mobile Documents/com~apple~CloudDocs/Desktop/WORKSPACE/REACT-BIG/React-evon/my-app/src/context/countContext.js"],"names":["createContext","useContext","useState","CountContext","CountProvider","props","count","setCount","value","useCount","context","Error"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;;AACA,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMM,KAAK,GAAG,CAACF,KAAD,EAAQC,QAAR,CAAd;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA,OAAyCH;AAAzC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CACD;;;GAPSD,a;;KAAAA,a;;AAST,SAASK,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGT,UAAU,CAACE,YAAD,CAA1B;AACA,MAAI,OAAOO,OAAP,KAAmB,WAAvB,EACE,MAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AAEF,SAAOD,OAAP;AACD;;IANQD,Q;;AAQT,SAASN,YAAT,EAAuBM,QAAvB","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst CountContext = createContext();\nfunction CountProvider(props) {\n  const [count, setCount] = useState(0);\n  const value = [count, setCount];\n  return (\n    <CountContext.Provider value={value} {...props}></CountContext.Provider>\n  );\n}\n//custom hook useCount\n\nfunction useCount() {\n  const context = useContext(CountContext);\n  if (typeof context === \"undefined\")\n    throw new Error(\"useCount must be used within a CountProvider\");\n\n  return context;\n}\n\nexport { CountContext, useCount };\n"]},"metadata":{},"sourceType":"module"}