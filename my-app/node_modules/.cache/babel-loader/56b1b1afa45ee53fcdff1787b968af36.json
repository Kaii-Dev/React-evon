{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\H\\u1ECCC T\\u1EDAI NG\\u1ECEM\\\\React-evon\\\\my-app\\\\src\\\\component\\\\tictactoe\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport CalculatedWinner from \"../../helpers\";\nimport Board from \"./Board\";\nimport \"./GameStyle.css\"; // const Game = () => {\n//   const [board, setBoard] = useState(Array(9).fill(null)); //board là tên biến giá trị mặc định, setBoard là dùng để tính toán, usestate truyền vào cho 9 cái giá trị là null để sau này dùng setBoard mà tính toán\n//   const [xIsNext, setXIsNext] = useState(true);\n//   const winner = CalculatedWinner(board);\n//   const handleClick = (index) => {\n//     const boardCopy = [...board];\n//     if (winner || boardCopy[index]) return;\n//     boardCopy[index] = xIsNext ? \"X\" : \"O\";\n//     setBoard(boardCopy);\n//     setXIsNext((xIsNext) => !xIsNext);\n//   };\n//   const handleResetGame = () => {\n//     setBoard(Array(9).fill(null));\n//     setXIsNext(true);\n//   };\n//   return (\n//     <div>\n//       {/* thằng board là props truyền vào cho Board */}\n//       <Board cells={board} onClick={handleClick}></Board>\n//       {winner && <div className=\"game-winner\">Winner is {winner}</div>}\n//       <button className=\"button\" onClick={handleResetGame}>\n//         Reset game\n//       </button>\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  board: Array(9).fill(null),\n  xIsNext: true\n};\nconst action = {\n  type: 'CLICK',\n  payload: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CLICK':\n      return state = 'x';\n      break;\n\n    default:\n      break;\n  }\n}; //clean code\n\n\nconst Game = () => {\n  _s();\n\n  // const [state, setState] = useState({\n  //   board: Array(9).fill(null),\n  //   xIsNext: true,\n  //   name: \"demo\",\n  // });\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const winner = CalculatedWinner(state.board);\n\n  const handleOnclick = index => {\n    const boardCopy = [...state.board]; //clone board để giá trị mảng gốc k thay đổi\n\n    if (winner || boardCopy[index]) return; //nếu có người thắng hoặc ô đã đc đánh rồi thì return\n    // boardCopy[index] = state.xIsNext ? \"X\" : \"O\"; //nếu muốn đánh tiếp theo là x còn k phải là 0\n    // console.log(state.xIsNext);\n    // setState({\n    //   ...state,\n    //   board: boardCopy,\n    //   xIsNext: !state.xIsNext,\n    // });\n  };\n\n  const handleResetGame = () => {// setState({\n    //   ...state,\n    //   board: Array(9).fill(null),\n    //   xIsNext: true,\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleOnclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleResetGame,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/HỌC TỚI NGỎM/React-evon/my-app/src/component/tictactoe/Game.js"],"names":["React","useReducer","useState","CalculatedWinner","Board","initialState","board","Array","fill","xIsNext","action","type","payload","reducer","state","Game","dispatch","winner","handleOnclick","index","boardCopy","handleResetGame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,iBAAP,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADY;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAIA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,OADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQJ,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAOG,KAAK,GAAG,GAAf;AACA;;AAEF;AACE;AANJ;AAQD,CATD,C,CAUA;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBf,UAAU,CAACY,OAAD,EAAUR,YAAV,CAApC;AACA,QAAMY,MAAM,GAAGd,gBAAgB,CAACW,KAAK,CAACR,KAAP,CAA/B;;AAEA,QAAMY,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAMC,SAAS,GAAG,CAAC,GAAGN,KAAK,CAACR,KAAV,CAAlB,CAD+B,CACK;;AACpC,QAAIW,MAAM,IAAIG,SAAS,CAACD,KAAD,CAAvB,EAAgC,OAFD,CAES;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVD;;AAYA,QAAME,eAAe,GAAG,MAAM,CAC5B;AACA;AACA;AACA;AACA;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP,KAAK,CAACR,KAApB;AAA2B,MAAA,OAAO,EAAEY;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEG,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CArCD;;GAAMN,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport CalculatedWinner from \"../../helpers\";\r\nimport Board from \"./Board\";\r\nimport \"./GameStyle.css\";\r\n\r\n// const Game = () => {\r\n//   const [board, setBoard] = useState(Array(9).fill(null)); //board là tên biến giá trị mặc định, setBoard là dùng để tính toán, usestate truyền vào cho 9 cái giá trị là null để sau này dùng setBoard mà tính toán\r\n//   const [xIsNext, setXIsNext] = useState(true);\r\n//   const winner = CalculatedWinner(board);\r\n\r\n//   const handleClick = (index) => {\r\n//     const boardCopy = [...board];\r\n//     if (winner || boardCopy[index]) return;\r\n//     boardCopy[index] = xIsNext ? \"X\" : \"O\";\r\n//     setBoard(boardCopy);\r\n//     setXIsNext((xIsNext) => !xIsNext);\r\n//   };\r\n\r\n//   const handleResetGame = () => {\r\n//     setBoard(Array(9).fill(null));\r\n//     setXIsNext(true);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       {/* thằng board là props truyền vào cho Board */}\r\n//       <Board cells={board} onClick={handleClick}></Board>\r\n//       {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n//       <button className=\"button\" onClick={handleResetGame}>\r\n//         Reset game\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\nconst initialState = {\r\n  board: Array(9).fill(null),\r\n  xIsNext: true,\r\n}\r\nconst action = {\r\n  type: 'CLICK',\r\n  payload: ''\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CLICK':\r\n      return state = 'x'\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n}\r\n//clean code\r\nconst Game = () => {\r\n  // const [state, setState] = useState({\r\n  //   board: Array(9).fill(null),\r\n  //   xIsNext: true,\r\n  //   name: \"demo\",\r\n  // });\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const winner = CalculatedWinner(state.board);\r\n\r\n  const handleOnclick = (index) => {\r\n    const boardCopy = [...state.board]; //clone board để giá trị mảng gốc k thay đổi\r\n    if (winner || boardCopy[index]) return; //nếu có người thắng hoặc ô đã đc đánh rồi thì return\r\n    // boardCopy[index] = state.xIsNext ? \"X\" : \"O\"; //nếu muốn đánh tiếp theo là x còn k phải là 0\r\n    // console.log(state.xIsNext);\r\n    // setState({\r\n    //   ...state,\r\n    //   board: boardCopy,\r\n    //   xIsNext: !state.xIsNext,\r\n    // });\r\n  };\r\n\r\n  const handleResetGame = () => {\r\n    // setState({\r\n    //   ...state,\r\n    //   board: Array(9).fill(null),\r\n    //   xIsNext: true,\r\n    // });\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <Board cells={state.board} onClick={handleOnclick}></Board>\r\n      <button className=\"button\" onClick={handleResetGame}>\r\n        Reset game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}